apply plugin: 'com.android.library'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 21
        versionCode project.buildNumber
        versionName "4.1.1"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    libraryVariants.all { variant ->
        def flavorName = variant.flavorName
        def buildType = variant.buildType.name
        variant.assemble << {
            copy {
                from("${project.buildDir}/intermediates/classes/${flavorName}/${buildType}")
                into("${project.buildDir}/outputs/classes")
            }
        }
    }
}

dependencies {
    compile 'com.android.support:support-v13:21.0.+'
    compile 'droidkit:droidkit-processor:1.0.+'
}

apply plugin: 'sonar-runner'

sonarRunner {
    sonarProperties {
        property 'sonar.projectKey', 'droidkit'
        property 'sonar.projectName', 'DroidKit'
        property 'sonar.projectVersion', "${android.defaultConfig.versionName}"
        property 'sonar.sources', 'src/main/java'
        property 'sonar.binaries', 'build/outputs/classes'

        property 'sonar.host.url', "${project.properties['sonar.host.url']}"
        property 'sonar.login', "${project.properties['sonar.login']}"
        property 'sonar.password', "${project.properties['sonar.password']}"
        property 'sonar.jdbc.url', "${project.properties['sonar.jdbc.url']}"
        property 'sonar.jdbc.username', "${project.properties['sonar.jdbc.username']}"
        property 'sonar.jdbc.password', "${project.properties['sonar.jdbc.password']}"
    }
}

apply plugin: 'maven'
apply plugin: 'signing'

afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "https://api.bintray.com/maven/dvp-troy/droidkit/droidkit") {
                    authentication(userName: bintrayUser, password: bintrayKey)
                }
                pom.project {
                    issueManagement {
                        system 'github'
                        url 'https://github.com/dev-troy/droidkit/issues'
                    }
                    scm {
                        url 'scm:https://github.com/dev-troy/droidkit'
                        connection 'scm:git@github.com:dev-troy/droidkit.git'
                        developerConnection 'scm:git@github.com:dev-troy/droidkit.git'
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'

                        }
                    }
                    developers {
                        developer {
                            name 'Daniel Serdyukov'
                            email 'dvp.troy@gmail.com'
                            url 'https://github.com/dev-troy'
                            roles {
                                role 'admin'
                                role 'developer'
                            }
                            timezone '+4'
                        }
                    }
                }
                pom.version = android?.defaultConfig?.versionName
                pom.groupId = "droidkit"
                pom.artifactId = 'droidkit'
            }
        }
    }

    signing {
        required { gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    task androidSourcesJar(type: Jar) {
        from android.sourceSets.main.java.sourceFiles
        classifier = 'sources'
    }

    artifacts {
        archives androidSourcesJar
    }
}