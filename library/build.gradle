apply plugin: 'com.android.library'
apply plugin: 'org.robolectric'
apply plugin: 'jacoco'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22
        versionCode rootProject.versionCode
        versionName rootProject.versionName
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

dependencies {
    compile 'com.squareup:javapoet:1.0.+'
    compile 'com.android.support:support-v13:22.0.+'
    compile 'org.sqlite.android:sqlite:3.8.8.+'
    compile files("../processor/build/libs/processor-${rootProject.version}.jar")
    testCompile 'junit:junit:4.+'
    testCompile 'org.mockito:mockito-core:1.9.+'
    testCompile 'org.robolectric:robolectric:2.+'
}

task assembleProcessor(type: GradleBuild) {
    dir = file('../processor')
    tasks = ['clean', 'assemble']
}

tasks.preBuild { dependsOn assembleProcessor }

robolectric {
    include '**/*Test.class'
    maxHeapSize = "2048m"
}

jacoco {
    toolVersion = "0.7.4.201502262128"
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"
    classDirectories = fileTree(
            dir: "${buildDir}/intermediates/classes/debug",
            excludes: ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*']
    )
    sourceDirectories = files("${buildDir.parent}/src/main/java")
    additionalSourceDirs = files([
            "${buildDir}/generated/source/buildConfig/debug",
            "${buildDir}/build/generated/source/r/debug"
    ])
    executionData = files("${buildDir}/jacoco/testDebug.exec")

    reports {
        xml.enabled = true
        html.enabled = true
    }
}